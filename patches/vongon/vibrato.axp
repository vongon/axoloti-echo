<patch-1.0 appVersion="1.0.12">
   <obj type="audio/in stereo" uuid="99848ad6d90a8e615e83b2e619cfc806f28e7281" name="in_1" x="98" y="56">
      <params/>
      <attribs/>
   </obj>
   <obj type="delay/write" uuid="bd73958e3830021807ee97a8cff4500a72a5710d" name="delay" x="210" y="56">
      <params/>
      <attribs>
         <combo attributeName="size" selection="2048 (42.66ms)"/>
      </attribs>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_1" x="1288" y="168">
      <params>
         <frac32.u.map name="amp" value="4.699999809265137"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_speed" x="56" y="196">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA7 (ADC1_IN7)"/>
      </attribs>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_1" x="196" y="196">
      <params>
         <frac32.s.map name="freq" value="-16.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="speed" x="336" y="196">
      <params>
         <frac32.u.map name="value" value="42.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_2" x="434" y="196">
      <params>
         <frac32.u.map name="amp" value="0.019999980926513672"/>
      </params>
      <attribs/>
   </obj>
   <obj type="osc/sine lin" uuid="6a4458d598c9b8634b469d1a6e7f87971b5932f" name="sine_2" x="560" y="196">
      <params>
         <frac32.u.map name="freq" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/bipolar2unipolar" uuid="5b5f9405be365706c1ad37266d9df07b9a1570ee" name="bipolar2unipolar_1" x="686" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="c16a625a661f40e4b359db604dcd00b3befcdbe3" name="*_1" x="840" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="delay/read interp" uuid="e3d8b8823ab551c588659520bf6cc25c630466c7" name="read_1" x="938" y="196">
      <params>
         <frac32.u.map name="time" value="0.0"/>
      </params>
      <attribs>
         <objref attributeName="delayname" obj="delay"/>
      </attribs>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="1442" y="196">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/gain" uuid="62b1c1a6337c7c8f6aec96408a432477b113cfa0" name="gain_2" x="1288" y="266">
      <params>
         <frac32.u.map name="amp" value="4.699999809265137"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gpio/in/analog" uuid="1c0c845ed2d7e06ae5f377ba13d9d09f4747ac87" name="analog_depth" x="56" y="294">
      <params/>
      <attribs>
         <combo attributeName="channel" selection="PA6 (ADC1_IN6)"/>
      </attribs>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_2" x="196" y="294">
      <params>
         <frac32.s.map name="freq" value="-16.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="depth" x="336" y="294">
      <params>
         <frac32.u.map name="value" value="12.399999618530273"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_1" x="434" y="294">
      <params>
         <frac32.u.map name="amp" value="5.0"/>
      </params>
      <attribs/>
   </obj>
   <comment type="patch/comment" x="70" y="560" text="Bypass footswitch"/>
   <obj type="gpio/in/digital" uuid="f59f139e8da912742832dc541157f20f30b7ac1b" name="digital_1" x="70" y="588">
      <params/>
      <attribs>
         <combo attributeName="pad" selection="PC5"/>
         <combo attributeName="mode" selection="pullup"/>
      </attribs>
   </obj>
   <obj type="deadsy/input/debounce1" uuid="dd7c32f9-81e3-4570-bea6-1e87c04029ed" name="debounce1_1" x="196" y="588">
      <params/>
      <attribs>
         <spinner attributeName="period" value="3"/>
         <combo attributeName="mode" selection="fast 1 to 0"/>
      </attribs>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_1" x="364" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/toggle" uuid="f42f0d3aab552c17bc78b9e65f85dc24f977503d" name="toggle_1" x="448" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="logic/inv" uuid="2bd44b865d3b63ff9b80862242bf5be779e3ad5" name="inv_2" x="546" y="588">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="00620061-ad8e-4202-95b2-7b16a403f0ad" name="bypass-control" x="644" y="588">
      <params/>
      <attribs>
         <text attributeName="script">
            <sText><![CDATA[bool bypass_state;
bool bypass_input;
uint16_t ADAU1961_REG_R22_PMIXL0;
uint16_t ADAU1961_REG_R23_PMIXL1;
uint16_t ADAU1961_REG_R24_PMIXR0;
uint16_t ADAU1961_REG_R25_PMIXR1;

uint16_t ADAU1961_REG_R31_PLLVOL;
uint16_t ADAU1961_REG_R32_PLRVOL;

void setup(void){
	bypass_state = false;
	bypass_input = false;
	ADAU1961_REG_R22_PMIXL0 = 0x401C;
	ADAU1961_REG_R23_PMIXL1 = 0x401D;
	ADAU1961_REG_R24_PMIXR0 = 0x401E;
	ADAU1961_REG_R25_PMIXR1 = 0x401F;
		
	ADAU1961_REG_R31_PLLVOL = 0x4025;
	ADAU1961_REG_R32_PLRVOL = 0x4026;
}

void loop(void){
	if(in1 > (40<<21)){
		out1 = 0x1;
		bypass_input = true;
	} else {
		out1 = 0x0;
		bypass_input = false;
	}
	if(bypass_input && !bypass_state) {
		bypass_state = true;
		ADAU1961_WriteRegister(ADAU1961_REG_R31_PLLVOL, 0x07); // mute left channel
		ADAU1961_WriteRegister(ADAU1961_REG_R32_PLRVOL, 0x07); // mute right channel
		chThdSleepMilliseconds(8); // wait for channel to mute
		
		ADAU1961_WriteRegister(ADAU1961_REG_R22_PMIXL0, 0x01); // mute Left DAC, no aux mix
		ADAU1961_WriteRegister(ADAU1961_REG_R23_PMIXL1, 0x06); // unmute Left Record Mixer
		ADAU1961_WriteRegister(ADAU1961_REG_R24_PMIXR0, 0x01); // mute Right DAC, no aux mix
		ADAU1961_WriteRegister(ADAU1961_REG_R25_PMIXR1, 0x60); // unmute Right Record Mixer
		
		ADAU1961_WriteRegister(ADAU1961_REG_R31_PLLVOL, 0xD7); // unmute left channel
		ADAU1961_WriteRegister(ADAU1961_REG_R32_PLRVOL, 0xD7); // unmute right channel
	} else if (!bypass_input && bypass_state) {
		bypass_state = false;
		ADAU1961_WriteRegister(ADAU1961_REG_R31_PLLVOL, 0x07); // mute left channel
		ADAU1961_WriteRegister(ADAU1961_REG_R32_PLRVOL, 0x07); // mute right channel
		chThdSleepMilliseconds(8); // wait for channel to mute
		
		ADAU1961_WriteRegister(ADAU1961_REG_R22_PMIXL0, 0x21); // unmute DAC, no aux mix
		ADAU1961_WriteRegister(ADAU1961_REG_R23_PMIXL1, 0x00); // mute Left Record Mixer
		ADAU1961_WriteRegister(ADAU1961_REG_R24_PMIXR0, 0x41); // unmute DAC, no aux mix
		ADAU1961_WriteRegister(ADAU1961_REG_R25_PMIXR1, 0x00); // mute Right Record Mixer

		ADAU1961_WriteRegister(ADAU1961_REG_R31_PLLVOL, 0xD7); // unmute left channel
		ADAU1961_WriteRegister(ADAU1961_REG_R32_PLRVOL, 0xD7); // unmute right channel
	}
}]]></sText>
         </text>
      </attribs>
      <object id="patch/object" uuid="00620061-ad8e-4202-95b2-7b16a403f0ad">
         <sDescription>script with 2 inputs and 2 outputs, running in a separate thread, you must define &quot;void setup(void){}&quot; and &quot;void loop(void)&quot;</sDescription>
         <author>Johannes Taelman</author>
         <license>BSD</license>
         <helpPatch>script.axh</helpPatch>
         <inlets>
            <frac32 name="in1_" description="in1"/>
         </inlets>
         <outlets>
            <frac32 name="out1_" description="out1"/>
         </outlets>
         <displays/>
         <params/>
         <attribs>
            <text name="script"/>
         </attribs>
         <includes/>
         <code.declaration><![CDATA[int32_t in1,in2;
int32_t out1,out2;
attr_script
msg_t ThreadX2(){
  setup();
  while(!chThdShouldTerminate()){
     loop();
     chThdSleepMilliseconds(1);
  }
  chThdExit((msg_t)0);
}
static msg_t ThreadX(void *arg) {
((attr_parent *)arg)->ThreadX2();
}
WORKING_AREA(waThreadX, 1024);
Thread *Thd;]]></code.declaration>
         <code.init><![CDATA[in1=0;in2=0;out1=0;out2=0;
  Thd = chThdCreateStatic(waThreadX, sizeof(waThreadX),
                    NORMALPRIO, ThreadX, (void *)this);]]></code.init>
         <code.dispose><![CDATA[chThdTerminate(Thd);
chThdWait(Thd);]]></code.dispose>
         <code.krate><![CDATA[outlet_out1__ = this->out1;
this->in1 = inlet_in1__;]]></code.krate>
      </object>
   </patchobj>
   <obj type="disp/hex" uuid="87617898f70d90033f8add921438bf0d11721fdd" name="hex_1" x="756" y="588">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_2" x="84" y="672">
      <params/>
      <attribs/>
   </obj>
   <obj type="disp/bool" uuid="a0ee71d48208b71752cbb8c05e55145106ef3946" name="bool_3" x="532" y="672">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="bipolar2unipolar_1" outlet="o"/>
         <dest obj="*_1" inlet="a"/>
      </net>
      <net>
         <source obj="*c_2" outlet="out"/>
         <dest obj="sine_2" inlet="freq"/>
      </net>
      <net>
         <source obj="*_1" outlet="result"/>
         <dest obj="read_1" inlet="time"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="*_1" inlet="b"/>
      </net>
      <net>
         <source obj="in_1" outlet="left"/>
         <dest obj="delay" inlet="in"/>
      </net>
      <net>
         <source obj="analog_speed" outlet="out"/>
         <dest obj="lowpass_1" inlet="in"/>
      </net>
      <net>
         <source obj="analog_depth" outlet="out"/>
         <dest obj="lowpass_2" inlet="in"/>
      </net>
      <net>
         <source obj="lowpass_1" outlet="out"/>
         <dest obj="*c_2" inlet="in"/>
      </net>
      <net>
         <source obj="lowpass_2" outlet="out"/>
         <dest obj="*c_1" inlet="in"/>
      </net>
      <net>
         <source obj="sine_2" outlet="wave"/>
         <dest obj="bipolar2unipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="bypass-control" outlet="out1_"/>
         <dest obj="hex_1" inlet="in"/>
      </net>
      <net>
         <source obj="digital_1" outlet="out"/>
         <dest obj="bool_2" inlet="in"/>
         <dest obj="debounce1_1" inlet="i0"/>
      </net>
      <net>
         <source obj="debounce1_1" outlet="o0"/>
         <dest obj="inv_1" inlet="i"/>
      </net>
      <net>
         <source obj="toggle_1" outlet="o"/>
         <dest obj="inv_2" inlet="i"/>
      </net>
      <net>
         <source obj="inv_1" outlet="o"/>
         <dest obj="toggle_1" inlet="trig"/>
      </net>
      <net>
         <source obj="inv_2" outlet="o"/>
         <dest obj="bool_3" inlet="in"/>
         <dest obj="bypass-control" inlet="in1_"/>
      </net>
      <net>
         <source obj="read_1" outlet="out"/>
         <dest obj="gain_1" inlet="in"/>
         <dest obj="gain_2" inlet="in"/>
      </net>
      <net>
         <source obj="gain_1" outlet="out"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="gain_2" outlet="out"/>
         <dest obj="out_1" inlet="right"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>188</x>
      <y>130</y>
      <width>1710</width>
      <height>1117</height>
   </windowPos>
</patch-1.0>